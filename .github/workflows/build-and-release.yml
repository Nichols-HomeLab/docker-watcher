name: Build image & create release (main)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Compute image repo (lowercase, org-pinned)
        id: img
        run: |
          echo "OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "NAME_LC=$(basename '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "IMAGE_REPO=${{ env.REGISTRY }}/$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')/$(basename '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Set version
        id: version
        run: |
          echo "VERSION=v0.0.${{ github.run_number }}" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.img.outputs.IMAGE_REPO }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.version.outputs.SHORT_SHA }}
            type=raw,value=${{ steps.version.outputs.VERSION }}

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          provenance: false
          sbom: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          release_name: ${{ steps.version.outputs.VERSION }}
          body: |
            Automated release for commit `${{ steps.version.outputs.SHORT_SHA }}`.

            **Images:**
            - `${{ steps.img.outputs.IMAGE_REPO }}:latest`
            - `${{ steps.img.outputs.IMAGE_REPO }}:${{ steps.version.outputs.SHORT_SHA }}`
            - `${{ steps.img.outputs.IMAGE_REPO }}:${{ steps.version.outputs.VERSION }}`
          draft: false
          prerelease: false
